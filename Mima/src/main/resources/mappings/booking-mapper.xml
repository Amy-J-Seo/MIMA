<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mima.app.session.mapper.BookingMapper">

<!-- 닥터 대쉬보드 메인 페이지 오늘의 예약_J12 -->
<select id="getList" resultType="BookingVO">
	SELECT B.BOOKING_NO,
		   B.PT_NO,
		   B.DOC_NO,
		   B.BOOKING_DATE,
		   B.PRICE,
		   B.CONSULT_DATE,
		   B.CONSULT_TIME,
		   B.BOOKING_STATUS,
		   M.NAME,
		   M.PT_PROFILE_PHOTO
	FROM BOOKING B JOIN MEMBER M
	ON B.PT_NO=M.MEMBER_NO
	WHERE B.CONSULT_DATE=TO_DATE(SYSDATE)
	AND (B.BOOKING_STATUS = 'p'
	OR B.BOOKING_STATUS = 'y')
	AND DOC_NO = #{memberNo}
</select>

<!-- 닥터 대쉬보드 메인 페이지 오늘의 예약 카운트_J07 -->
<select id="countGetList" resultType="int">
    SELECT COUNT(*)
    FROM BOOKING
    WHERE CONSULT_DATE = TO_DATE(SYSDATE)
    AND (BOOKING_STATUS = 'p'
	OR BOOKING_STATUS = 'y')
    AND DOC_NO = #{memberNo}
</select>

<!-- 닥터 대쉬보드 메인 페이지 진료내역_J -->
<select id="getlatestapptList" resultType="BookingVO">
	<![CDATA[
	SELECT *
	FROM (SELECT B.BOOKING_NO,
                 B.PT_NO,
                 B.DOC_NO,
                 B.BOOKING_DATE,
                 B.PRICE,
                 B.CONSULT_DATE,
                 B.CONSULT_TIME,
                 M.NAME,
                 M.PT_PROFILE_PHOTO
          FROM BOOKING B JOIN MEMBER M
          ON B.PT_NO=M.MEMBER_NO
          WHERE CONSULT_DATE < TO_DATE(SYSDATE)
          AND DOC_NO = #{memberNo}
          ORDER BY CONSULT_DATE DESC)
    WHERE ROWNUM < 6
     ]]>    
</select>

<!-- 닥터 대쉬보드 메인 페이지 나의 환자들 카운트_J07 -->
<select id="countPatientList" resultType="int">
	SELECT COUNT (DISTINCT PT_NO)
	FROM BOOKING
	WHERE DOC_NO = #{memberNo}
</select>

<!-- 닥터 대쉬보드 예약관리 페이지 페이징 카운트_J15 -->
<select id="apptManageCount" resultType="int">
	SELECT COUNT(*) 
	FROM BOOKING B JOIN MEMBER M
    ON B.PT_NO = M.MEMBER_NO
	WHERE <include refid="criteria"></include>
			B.PT_NO > 0
	AND CONSULT_DATE >= TO_DATE(SYSDATE)
	AND B.DOC_NO = #{memberNo}
</select>

<!-- 닥터 대쉬보드 예약관리 페이지 모두보기 페이징_J15 -->
<select id="apptListPage" resultType="BookingVO">
	SELECT *
	FROM( SELECT /*+INDEX_DESC(BOOKING BOOKING_PK) */
				 ROWNUM RN,
				 B.BOOKING_NO,
                 B.PT_NO,
                 B.BOOKING_DATE,
                 B.PRICE,
                 B.CONSULT_DATE,
                 B.CONSULT_TIME,
                 B.BOOKING_STATUS,
                 M.NAME,
                 M.PT_PROFILE_PHOTO
		  FROM BOOKING B JOIN MEMBER M
          ON B.PT_NO=M.MEMBER_NO
		  WHERE <include refid="criteria"></include>
				<![CDATA[
				ROWNUM <= #{cri.pageNum} * #{cri.amount}
          AND CONSULT_DATE >= TO_DATE(SYSDATE)
		  AND B.DOC_NO = #{memberNo}
	   	  ORDER BY CONSULT_DATE ASC, CONSULT_TIME ASC )
	WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
</select>

<!-- 닥터 대쉬보드 예약관리 페이지 예정된 목록 보기 페이징_J15 -->
<select id="apptListSoonPage" resultType="BookingVO">
	SELECT *
	FROM( SELECT /*+INDEX_DESC(BOOKING BOOKING_PK) */
				 ROWNUM RN,
				 B.BOOKING_NO,
                 B.PT_NO,
                 B.BOOKING_DATE,
                 B.PRICE,
                 B.CONSULT_DATE,
                 B.CONSULT_TIME,
                 B.BOOKING_STATUS,
                 M.NAME,
                 M.PT_PROFILE_PHOTO
		  FROM BOOKING B JOIN MEMBER M
          ON B.PT_NO=M.MEMBER_NO
		  WHERE <include refid="criteria"></include>
				<![CDATA[
				ROWNUM <= #{cri.pageNum} * #{cri.amount}
          AND CONSULT_DATE >= TO_DATE(SYSDATE)
		  AND B.DOC_NO = #{memberNo}
          AND (B.BOOKING_STATUS = 'p'
          OR B.BOOKING_STATUS = 'y')
	   	  ORDER BY CONSULT_DATE ASC, CONSULT_TIME ASC )
	WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
</select>

<!-- 닥터 대쉬보드 예약관리 페이지 취소된 목록 보기 페이징_J15 -->
<select id="apptListCanceledPage" resultType="BookingVO">
	SELECT *
	FROM( SELECT /*+INDEX_DESC(BOOKING BOOKING_PK) */
				 ROWNUM RN,
				 B.BOOKING_NO,
                 B.PT_NO,
                 B.BOOKING_DATE,
                 B.PRICE,
                 B.CONSULT_DATE,
                 B.CONSULT_TIME,
                 B.BOOKING_STATUS,
                 M.NAME,
                 M.PT_PROFILE_PHOTO
		  FROM BOOKING B JOIN MEMBER M
          ON B.PT_NO=M.MEMBER_NO
		  WHERE <include refid="criteria"></include>
				<![CDATA[
				ROWNUM <= #{cri.pageNum} * #{cri.amount}
          AND CONSULT_DATE >= TO_DATE(SYSDATE)
		  AND B.DOC_NO = #{memberNo}
          AND B.BOOKING_STATUS = 'c'
	   	  ORDER BY CONSULT_DATE ASC, CONSULT_TIME ASC )
	WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
</select>

<!-- 닥터 대쉬보드 진료내역 페이징 카운트_J06. J17 -->
<select id="apptHistoryCount" resultType="int">
	SELECT COUNT(*) 
	FROM BOOKING B JOIN MEMBER M
    ON B.PT_NO = M.MEMBER_NO
	WHERE
	<if test ="cri.keyword != null">M.NAME LIKE '%'|| #{cri.keyword} || '%' AND</if>
	B.PT_NO > 0
	AND B.DOC_NO = #{memberNo}
	<![CDATA[
	AND CONSULT_DATE < TO_DATE(SYSDATE)
	]]>
</select>
	
<!-- 닥터 대쉬보드 진료내역 페이징_J06 -->
<select id="apptHistoryPage" resultType="BookingVO">
	SELECT *
	FROM( SELECT  /*+INDEX_DESC(BOOKING BOOKING_PK) */
				  ROWNUM RN,
				  B.BOOKING_NO,
				  B.PT_NO,
				  B.DOC_NO,
				  B.BOOKING_DATE,
				  B.PRICE,
				  B.BOOKING_STATUS,
				  B.CONSULT_DATE,
				  B.CONSULT_TIME,
				  B.EDIT_DATE,
				  B.ROOM_ID,
				  B.FIRST_SESSION,
				  B.SUBJECT,
				  M.NAME,
				  M.PT_PROFILE_PHOTO
		  FROM BOOKING B JOIN MEMBER M
                ON PT_NO = M.MEMBER_NO
		  WHERE <if test ="cri.keyword != null">
		  			M.NAME LIKE '%'|| #{cri.keyword} || '%' AND
		  		</if>	
		  		<![CDATA[
			  	ROWNUM <= #{cri.pageNum} * #{cri.amount} 
			  	AND CONSULT_DATE < TO_DATE(SYSDATE)
				AND DOC_NO = #{memberNo}
		  ORDER BY CONSULT_DATE DESC, CONSULT_TIME ASC)
	WHERE RN > (#{cri.pageNum}-1)* #{cri.amount}]]>
</select>


<!-- 페이징 -->
<!-- trim 한 것 따로 빼 낸것... -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="cri.typeArr" item="type">
				<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
				<trim prefix="or">
					<choose>
						<when test="cri.type == 'T'.toString()">
							TITLE LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="cri.type =='C'.toString()">
							CONTENT LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="cri.type =='W'.toString()">
							WRITER LIKE '%'|| #{cri.keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<sql id="criteriaApptManage">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="cri.typeArr" item="type">
				<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
				<trim prefix="or">
					<choose>
						<when test="cri.type == 'T'.toString()">
							TITLE LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="cri.type =='C'.toString()">
							CONTENT LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="cri.type =='W'.toString()">
							WRITER LIKE '%'|| #{cri.keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<sql id="criteriaApptHistory">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="#{cri.typeArr}" item="type">
				<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
				<trim prefix="or">
					<choose>
						<when test="type == 'T'.toString()">
							TITLE LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="type =='C'.toString()">
							CONTENT LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="type =='W'.toString()">
							WRITER LIKE '%'|| #{cri.keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
<!-- total count -->
<!-- 페이징 end -->



<!-- s:0929 진료시간중 10초마다 진료경로 검색 -->
<select id="getRoomId" resultType="BookingVO">
	<!-- SELECT BOOKING_NO, ROOM_ID, PT_NO, CONSULT_TIME
	FROM BOOKING
	WHERE PAY_STATUS='y' AND BOOKING_STATUS='y' AND TO_CHAR(CONSULT_DATE, 'YYYY-MM-dd') = TO_CHAR(sysdate, 'YYYY-MM-dd') AND ROOM_ID IS NOT NULL -->
	
	select Room_id, pt_no from booking where booking_no = #{bookingNo}
</select>

<!-- s:1003 단일예약정보 조회: 노드에서 요청 -->
<select id="getBookingInfo" resultType="BookingVO">
	    SELECT 
		a.BOOKING_NO,
		a.PT_NO,
		a.DOC_NO,
        d.NAME AS DOC_NAME,
		a.CONSULT_DATE,
		a.CONSULT_TIME,
		b.NAME,
		b.IDENTIFY_NO,
		c.med_delivery
	FROM BOOKING a JOIN MEMBER b
	ON (a.PT_NO = b.MEMBER_NO) JOIN PATIENTS C
	ON (a.PT_NO = c.MEMBER_NO) JOIN MEMBER D
    ON (a.DOC_NO = d.MEMBER_NO)
	WHERE a.BOOKING_NO=#{bookingNo}
</select>


<!-- 진료 예약 p.10/06 -->
<insert id="insertBookingDate">
	<selectKey keyProperty="bookingNo" resultType="int"
		order="BEFORE">
		SELECT SEQ_BOOKING.NEXTVAL FROM DUAL
	</selectKey>
	INSERT INTO BOOKING
		(BOOKING_NO,
		 PT_NO,
		 DOC_NO,
		 SUBJECT,
		 CONSULT_DATE,
		 CONSULT_TIME,
		 FIRST_SESSION)
	VALUES
		(#{bookingNo},
		 #{ptNo},
		 #{docNo},
		 #{subject},
		 #{consultDate},
		 #{consultTime},
		 #{firstSession})
</insert>

<!-- 결제 페이지 필요 내용 가져오기 p.10/07 -->
<select id="selectBookingInfo" resultType="BookingVO">
	SELECT BOOKING_NO,
		   PT_NO,
		   DOC_NO,
		   CONSULT_DATE, 
		   CONSULT_TIME, 
		   FIRST_SESSION, 
		   SUBJECT
	FROM BOOKING
	WHERE BOOKING_STATUS = 'y'
	AND PT_NO = #{memberNo}
</select>

<!-- Booking table 결제 status 업데이트 p.10/09 -->
<update id="updateBookingStatus"> 
	UPDATE BOOKING
	SET BOOKING_STATUS = 'p',
	PRICE = #{price}
	WHERE BOOKING_NO = #{bookingNo}
</update>

<!-- 예약번호로 의사,환자 이름찾기 -->
<select id="findNamePtDoc" resultType="bookingVO">
	SELECT M.NAME , MM.NAME "DOC_NAME"
	FROM BOOKING B, MEMBER M, MEMBER MM
	WHERE B.PT_NO = M.MEMBER_NO
	AND B.DOC_NO = MM.MEMBER_NO
	AND BOOKING_NO = #{bookingNo}
</select>

<!-- 결제 취소 시 부킹 테이블 업데이트 status - c로 p.10.24 -->
<update id="cancelUpdate">
	UPDATE BOOKING
	SET BOOKING_STATUS = 'c'
	WHERE BOOKING_NO = #{bookingNo}
</update>

</mapper>
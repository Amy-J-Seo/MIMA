<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mima.app.member.mapper.MemberMapper">
	
	<!-- 아이디 중복 체크 -->
	<select id="idCheck" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 닉네임 중복 체크 -->
	<select id="nickNameCheck" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		WHERE NICKNAME = #{nickname}
	</select>
	
	<!-- License 체크 -->
	<select id="licenseCheck" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		WHERE LICENSE = #{license}
	</select>
	
	<!-- 로그인 -->
	<select id="memberLogin" resultType="MemberVO">
		SELECT * FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
		AND PASSWORD = #{password}
		AND STATUS = 'y'
	</select>
	
	<!-- 아이디 찾기 p-30 -->
	<select id="findMemberId" resultType="string"> 
		SELECT MEMBER_ID 
		FROM MEMBER
		WHERE NAME = #{name}
		AND PHONE = #{phone}
		AND STATUS = 'y'
	</select>
	
	<!-- 비밀번호 가져오기 p10/11 -->
	<select id="findPassword1" resultType="MemberVO">
		SELECT PASSWORD 
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<update id="updatePassword">
		UPDATE MEMBER
		SET PASSWORD = #{password}
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	<!-- 아이디 이메일로 초기화 유무 묻기 p-29 -->
	<select id="findPassword" resultType="int"> 
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
		AND EMAIL = #{email}
	</select>
	
	<!-- 회원 세션 유지를 위한 한건 조회 p.30 -->
	<select id="getUserById" parameterType="String" resultType="MemberVO">
		SELECT * FROM MEMBER WHERE MEMBER_ID = #{memberId} AND STATUS='y'
	</select>
	
	<!-- 승인된 의사 조회 p.10/04 -->
	<select id="selectDoctorY" resultType="MemberVO">
		SELECT MEMBER_NO, NAME 
		FROM MEMBER 
		WHERE ROLE = 'doctor' 
		AND STATUS = 'y'
	</select>
	
	<!-- 회원가입 -->
	<insert id="memberInsert">
		<selectKey keyProperty="memberNo" resultType="int"
				order="BEFORE">
			SELECT SEQ_MEMBER.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO MEMBER
			(MEMBER_NO,
			 MEMBER_ID,
			 PASSWORD,
			 NICKNAME,
			 ROLE,
			 NAME,
			 IDENTIFY_NO,
			 GENDER,
			 POSTCODE,
			 ADDR1,
			 ADDR2,
			 ADDR3,
			 EMAIL,
			 PHONE,
			 STATUS,
			 PT_PROFILE_PHOTO,
			 DELIVERY_STATUS)
		VALUES 
			(#{memberNo},
			 #{memberId},
			 #{password},
			 #{nickname},
			 #{role},
			 #{name},
			 #{identifyNo},
			 #{gender},
			 #{postcode},
			 #{addr1},
			 #{addr2},
			 #{addr3},
			 #{email},
			 #{phone},
			 #{status},
			 #{ptProfilePhoto},
			 #{deliveryStatus})
	</insert>
	
	<!-- 환자 회원가입 수정 p.10/10 -->
	<insert id="partnerMemberInsert">
		<selectKey keyProperty="memberNo" resultType="int"
				order="BEFORE">
			SELECT SEQ_MEMBER.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO MEMBER
			(MEMBER_NO,
			 MEMBER_ID,
			 PASSWORD,
			 NICKNAME,
			 ROLE,
			 NAME,
			 IDENTIFY_NO,
			 GENDER,
			 POSTCODE,
			 ADDR1,
			 ADDR2,
			 ADDR3,
			 EMAIL,
			 PHONE,
			 LICENSE,
			 STATUS)
		VALUES
			(#{memberNo},
			 #{memberId},
			 #{password},
			 #{nickname},
			 #{role},
			 #{name},
			 #{identifyNo},
			 #{gender},
			 #{postcode},
			 #{addr1},
			 #{addr2},
			 #{addr3},
			 #{email},
			 #{phone},
			 #{license},
			 #{status})
	</insert>
	
	<!-- e. 29 -->
	<!-- 관리자 약국 의사 승인 유무 쿼리 -->
	<select id="patnerStatusSelect" resultType="memberVO">
		SELECT * FROM MEMBER
		WHERE STATUS = 'n' 
		AND ( ROLE = 'doctor' OR ROLE = 'pharmacy')
	</select>
	
	<!-- e. 29 -->
	<!--관리자 약국 의사 등록 쿼리 -->
	<update id="patnerStatusUpdate">
		UPDATE MEMBER 
		SET STATUS='y' 
		WHERE LICENSE = #{license}
		AND STATUS='n'
	</update>
	
	<!-- 비밀번호 초기화 시 멤버 테이블 업데이트 p.30 -->
	<update id="passwordResetUpdate">
		UPDATE MEMBER
		SET PASSWORD = #{password}
		WHERE MEMBER_id = #{memberId}
		AND EMAIL = #{email}
	</update>
	
	<!-- 닥터 대쉬보드 비밀번호 변경_J04 -->
	<update id="docPwChange">
		UPDATE MEMBER
		SET PASSWORD = #{password}
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	
	<!-- 환자 대쉬보드 비밀번호 변경 e.11  -->
	<update id="ptPwChange">
		UPDATE MEMBER
		SET PASSWORD = #{password}
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	<!-- 닥터 대쉬보드 나의 환자들 조회_J06 -->
	<select id="patientList" resultType="MemberBookingVO">
		SELECT M.NAME AS MNAME,
               M.MEMBER_NO AS MMEMBERNO,
			   M.GENDER AS MGENDER,
		       M.PHONE AS MPHONE,
		       M.ADDR1 AS MADDR1,
		       M.ADDR2 AS MADDR2,
		       M.ADDR3 AS MADDR3,
		       MAX(B.CONSULT_DATE) AS BCONSULTDATE
		FROM MEMBER M JOIN BOOKING B
		ON (M.MEMBER_NO = B.PT_NO)
		WHERE B.DOC_NO = #{memberNo}
        AND B.BOOKING_STATUS = 'p'
        GROUP BY M.NAME,
                 M.MEMBER_NO,
                 M.GENDER,
                 M.PHONE,
                 M.ADDR1,
		         M.ADDR2,
		         M.ADDR3
	</select>
	
	<!-- 닥터 대쉬보드 나의 환자들 페이징 카운트_J13. J17 -->
	<select id="patientListCount" resultType="int">
		SELECT COUNT(*) 
        FROM ( SELECT M.NAME AS MNAME,
			                M.MEMBER_NO AS MMEMBERNO,
			                M.GENDER AS MGENDER,
			                M.PHONE AS MPHONE,
			                M.ADDR1 AS MADDR1,
			                M.ADDR2 AS MADDR2,
			                M.ADDR3 AS MADDR3,
               				MAX(B.CONSULT_DATE) AS BCONSULTDATE
                  	 FROM MEMBER M JOIN BOOKING B
                  	 ON (M.MEMBER_NO = B.PT_NO)
                  	 WHERE <if test ="cri.keyword != null">M.NAME LIKE '%'|| #{cri.keyword} || '%' AND</if>
                     B.PT_NO > 0
                  	 AND DOC_NO = #{memberNo}
                  	 AND B.BOOKING_STATUS = 'p'
                  	 GROUP BY M.NAME,
                              M.MEMBER_NO,
                              M.GENDER,
                              M.PHONE,
                              M.ADDR1,
                              M.ADDR2,
                              M.ADDR3 )
		
	</select>
	
	<!-- 닥터 대쉬보드 나의 환자들 페이징_J06 -->
	<select id="patientListPage" resultType="MemberBookingVO">
	
		 SELECT *
 		 FROM( SELECT /*+INDEX_DESC(MEMBER MEMBER_PK) */
        			  ROWNUM RN, A.*
        	   FROM (SELECT M.NAME AS MNAME,
			                M.MEMBER_NO AS MMEMBERNO,
			                M.GENDER AS MGENDER,
			                M.PHONE AS MPHONE,
			                M.ADDR1 AS MADDR1,
			                M.ADDR2 AS MADDR2,
			                M.ADDR3 AS MADDR3,
               				MAX(B.CONSULT_DATE) AS BCONSULTDATE
                  	 FROM MEMBER M JOIN BOOKING B
                  	 ON (M.MEMBER_NO = B.PT_NO)
                  	 WHERE B.BOOKING_STATUS = 'p'
                  	 AND DOC_NO = #{memberNo}
                  	 GROUP BY M.NAME,
                              M.MEMBER_NO,
                              M.GENDER,
                              M.PHONE,
                              M.ADDR1,
                              M.ADDR2,
                              M.ADDR3) A
        	   WHERE <if test ="cri.keyword != null">
			  			MNAME LIKE '%'|| #{cri.keyword} || '%' AND
			  		</if>
        	   		 <![CDATA[
        	   		 ROWNUM <= #{cri.pageNum} * #{cri.amount} 
        	   ORDER BY MNAME)
		 WHERE ROWNUM > (#{cri.pageNum}-1)* #{cri.amount} ]]>
	</select>
	
	<!-- 페이징 -->
	<!-- trim 한 것 따로 빼 낸것... -->
		<sql id="criteria">
			<trim prefix="(" suffix=") AND " prefixOverrides="OR">
				<foreach collection="typeArr" item="type">
					<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
					<trim prefix="or">
						<choose>
							<when test="type == 'T'.toString()">
								TITLE LIKE '%'|| #{keyword} || '%'
							</when>
	
							<when test="type =='C'.toString()">
								CONTENT LIKE '%'|| #{keyword} || '%'
							</when>
	
							<when test="type =='W'.toString()">
								WRITER LIKE '%'|| #{keyword} || '%'
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</sql>
		
		<sql id="criteriaPatientList">
			<trim prefix="(" suffix=") AND " prefixOverrides="OR">
				<foreach collection="#{cri.typeArr}" item="type">
					<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
					<trim prefix="or">
						<choose>
							<when test="type == 'T'.toString()">
								TITLE LIKE '%'|| #{cri.keyword} || '%'
							</when>
	
							<when test="type =='C'.toString()">
								CONTENT LIKE '%'|| #{cri.keyword} || '%'
							</when>
	
							<when test="type =='W'.toString()">
								WRITER LIKE '%'|| #{cri.keyword} || '%'
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</sql>
	<!-- total count -->
	<!-- 페이징 end -->
	
	<!-- 닥터 진료내역 페이지 선택한 환자의 진료노트 조회_J10 -->
	<select id="getCnote" resultType="PtInfoVO">
		SELECT M.NAME,
		       M.IDENTIFY_NO,
		       M.GENDER,
		       M.PHONE,
		       M.ADDR1,
		       M.ADDR2,
		       M.ADDR3,
		       B.BOOKING_NO,
		       B.CONSULT_DATE,
		       B.CONSULT_TIME,
		       B.SUBJECT,
		       C.PT_DIAGNOSIS,
		       C.PT_ASSESSMENT,
		       C.PT_SYMPTOM
		FROM MEMBER M, BOOKING B, CONSULTATION C, PATIENTS P
		WHERE M.MEMBER_NO = B.PT_NO
		AND   B.BOOKING_NO = C.BOOKING_NO
		AND   C.PT_NO = P.MEMBER_NO
		AND B.BOOKING_NO = #{bookingNo}
	</select>
	
	<!-- K.10/11 약배달 신청 유무 변경 -->
	<update id="deliveryStatusUpdate">
		UPDATE MEMBER
		SET DELIVERY_STATUS = #{deliveryStatus} 
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- K.10/11 약배달 신청 유무 확인 -->
	<select id="deliveryStatus" resultType="String">
		SELECT DELIVERY_STATUS
		FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>
</mapper>
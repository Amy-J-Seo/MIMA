<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mima.app.member.mapper.PatientsMapper">

<!-- s:1004 pt preScreening -->
	<update id="update">
	UPDATE PATIENTS
		SET
			PAST_HX =#{pastHx},
			SESSION_REASON=#{sessionReason},
			PRE_DIAGNOSIS=#{preDiagnosis},
			CURRENT_MEDS=#{currentMeds},
			MORE_INFO=#{moreInfo} 
		WHERE MEMBER_NO=#{memberNo}
	</update>

<!-- s:1004 pt preScreening Ax result 머리가 쓰기 귀찮아서 그냥 이렇게 해 놓습니다... -->
	<update id="updateAx">
	UPDATE PATIENTS
		SET
			PRE_SELF_AX=#{preSelfAx}
		WHERE MEMBER_NO=#{memberNo}
	</update>

<!-- 관리자 회원정보조회 토탈카운트 e.13 -->
	<select id="getTotalCount" resultType="int">
		SELECT (COUNT(A.MEMBER_NO)+ COUNT(B.MEMBER_NO)+ COUNT(C.MEMBER_NO)) AS TOTAL
		FROM PATIENTS A FULL OUTER JOIN PARTNER_DOCTOR B
		ON A.MEMBER_NO = B.MEMBER_NO
		FULL OUTER JOIN PARTNER_PHARMACY C
		ON B.MEMBER_NO = C.MEMBER_NO
	</select>

<!-- 관리자 회원정보조회(환자) e.29-->
	<select id="getptList" resultType="PatientsVO"> 
		SELECT   P.MEMBER_NO
				,P.PAST_HX
				,P.PRE_SELF_AX
				,P.TOPIC
				,P.MED_DELIVERY
				,P.REG_DATE
				,P.EDIT_DATE
				,M.NAME
		FROM PATIENTS P JOIN MEMBER M
		ON P.MEMBER_NO = M.MEMBER_NO
	</select> 

<!--회원정보조회(환자) 페이징 e.4-->
<!-- trim 한 것 따로 빼 낸것... -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
				<trim prefix="or">
					<choose>
						<when test="type == 'T'.toString()">
							TITLE LIKE '%'|| #{keyword} || '%'
						</when>

						<when test="type =='C'.toString()">
							CONTENT LIKE '%'|| #{keyword} || '%'
						</when>

						<when test="type =='W'.toString()">
							WRITER LIKE '%'|| #{keyword} || '%'
						</when>
						<when test="type =='delivery'.toString()">
							DELIVERT_AREA LIKE '%'|| #{keyword} || '%'
						</when>
						
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- total count -->
	<select id="getTotalPatientsCount" resultType="int">
		SELECT COUNT(*) FROM PATIENTS
		WHERE
		<include refid="criteria"></include>
		MEMBER_NO > 0
	</select>

	<select id="getPatientsList" resultType="PatientsVO">
		SELECT *
		FROM( SELECT /*+INDEX_DESC(PATIENTS PATIENTS_PK) */
					 ROWNUM RN,P.MEMBER_NO
					 ,P.PAST_HX
					 ,P.PRE_SELF_AX
					 ,P.TOPIC
					 ,P.MED_DELIVERY
					 ,P.REG_DATE
					 ,P.EDIT_DATE
					 ,M.NAME
			  FROM PATIENTS P JOIN MEMBER M
			  ON P.MEMBER_NO = M.MEMBER_NO
        	  <include refid="criteria"></include>
					<![CDATA[
			  AND	ROWNUM <= #{pageNum} * #{amount} )
		WHERE RN > (#{pageNum}-1)* #{amount} ]]>
	</select>
<!-- 페이징 end -->

<!-- 관리자 회원정보조회(의사) e.7 -->
	<select id="getdocList" resultType="PartnerDoctorVO">
		SELECT  MEMBER_NO,
				PROFILE_EDUCATION,
				CLINIC_INFO,
				CLINIC_PHONE,
				CLINIC_EMAIL,
				REG_DATE,
				EDIT_DATE
		FROM PARTNER_DOCTOR
	</select>

<!--회원정보조회(의사) 페이징 e.7-->
<!-- trim 한 것 따로 빼 낸것... -->
	<sql id="criteriasd">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
				<trim prefix="or">
					<choose>
						<when test="type == 'T'.toString()">
							TITLE LIKE '%'|| #{keyword} || '%'
						</when>

						<when test="type =='C'.toString()">
							CONTENT LIKE '%'|| #{keyword} || '%'
						</when>

						<when test="type =='W'.toString()">
							WRITER LIKE '%'|| #{keyword} || '%'
						</when>
						<when test="type =='delivery'.toString()">
							DELIVERT_AREA LIKE '%'|| #{keyword} || '%'
						</when>
						
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- total count -->
	<select id="getTotaldoctorCount" resultType="int">
		SELECT COUNT(*) FROM PARTNER_DOCTOR
		WHERE
		<include refid="criteriasd"></include>
		MEMBER_NO > 0
	</select>

	<select id="getdoctorList" 
		resultType="PartnerDoctorVO">
		SELECT *
		FROM( SELECT /*+INDEX_DESC(PARTNER_DOCTOR PARTNER_DOCTOR_PK) */
		ROWNUM RN, MEMBER_NO, PROFILE_EDUCATION, CLINIC_INFO, CLINIC_PHONE, CLINIC_EMAIL, REG_DATE
		FROM PARTNER_DOCTOR
		WHERE	
		
		<include refid="criteriasd"></include>
				<![CDATA[
				ROWNUM <= #{pageNum} * #{amount}				
				)
		WHERE RN > (#{pageNum}-1)* #{amount} ]]>
	</select>
<!-- 페이징 end -->

<!-- 관리자 회원정보조회(약국) e.7 -->
	<select id="getpmList" resultType="PartnerPharmacyVO">
		SELECT  MEMBER_NO,
				PHARMACY_INFO,
				PHARMACY_CONTACT,
				PHARMACY_EMAIL,
				DELIVERY_AREA,
				REG_DATE,
				EDIT_DATE
		FROM PARTNER_PHARMACY
	</select>
	
<!--회원정보조회(약국) 페이징 e.8-->
<!-- trim 한 것 따로 빼 낸것... -->
	<sql id="criteriase">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
				<trim prefix="or">
					<choose>
						<when test="type == 'T'.toString()">
							TITLE LIKE '%'|| #{keyword} || '%'
						</when>

						<when test="type =='C'.toString()">
							CONTENT LIKE '%'|| #{keyword} || '%'
						</when>

						<when test="type =='W'.toString()">
							WRITER LIKE '%'|| #{keyword} || '%'
						</when>
						<when test="type =='delivery'.toString()">
							DELIVERT_AREA LIKE '%'|| #{keyword} || '%'
						</when>
						
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- total count -->
	<select id="getTotalpharCount" resultType="int">
		SELECT COUNT(*) FROM PARTNER_PHARMACY
		WHERE
		<include refid="criteriase"></include>
		MEMBER_NO > 0
	</select>

	<select id="getpharList" 
		resultType="PartnerPharmacyVO">
		SELECT *
		FROM( SELECT /*+INDEX_DESC(PARTNER_PHARMACY PARTNER_PHARMACY_PK) */
		ROWNUM RN, MEMBER_NO, PHARMACY_INFO, PHARMACY_CONTACT, 
		PHARMACY_EMAIL, DELIVERY_AREA, REG_DATE
		FROM PARTNER_PHARMACY
		WHERE	
		
		<include refid="criteriase"></include>
				<![CDATA[
				ROWNUM <= #{pageNum} * #{amount}				
				)
		WHERE RN > (#{pageNum}-1)* #{amount} ]]>
	</select>
<!-- 페이징 end -->
	
<!-- e.4 -->
<!-- 환자대쉬보드 Main 오늘의 예약_J17 -->
<select id="ptgetList" resultType="BookingVO">
	SELECT B.BOOKING_NO,
           B.PT_NO,
           B.DOC_NO,
           B.BOOKING_DATE,
           B.PRICE,
           B.BOOKING_STATUS,
           B.CONSULT_DATE,
           B.CONSULT_TIME,
           M.NAME
	FROM BOOKING B JOIN MEMBER M
	ON B.DOC_NO = M.MEMBER_NO
	WHERE B.CONSULT_DATE = TO_DATE(SYSDATE)
	AND PT_NO = #{memberNo}
</select>

<!-- 예약관리 페이징 e.5-->
<!-- trim 한 것 따로 빼 낸것... -->
	<!-- <sql id="criterias">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임
				<trim prefix="or">
					<choose>
						<when test="type == 'T'.toString()">
							TITLE LIKE '%'|| #{keyword} || '%'
						</when>

						<when test="type =='C'.toString()">
							CONTENT LIKE '%'|| #{keyword} || '%'
						</when>

						<when test="type =='W'.toString()">
							WRITER LIKE '%'|| #{keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql> -->
	
	<sql id="criteriaPtBook">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="#{cri.typeArr}" item="type">
				<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
				<trim prefix="or">
					<choose>
						<when test="cri.type == 'T'.toString()">
							TITLE LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="cri.type =='C'.toString()">
							CONTENT LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="cri.type =='W'.toString()">
							WRITER LIKE '%'|| #{cri.keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- total count -->
<!-- 	<select id="getTotalPtbmCount" resultType="int">
		SELECT COUNT(*) FROM BOOKING
		WHERE
		<include refid="criterias"></include>
		BOOKING_NO > 0
		<![CDATA[
		AND CONSULT_DATE>=TO_DATE(SYSDATE)
		]]>
	</select> -->
	
	<!-- 환자 대쉬보드 예약관리 페이지 페이징 카운트_J18 -->
	<select id="ptbmListCount" resultType="int">
		SELECT COUNT(*)
		FROM BOOKING B JOIN MEMBER M
		ON B.DOC_NO = M.MEMBER_NO
		WHERE <include refid="criteriaPtBook"></include>
			  <![CDATA[
			  B.BOOKING_NO > 0
		AND CONSULT_DATE >= TO_DATE(SYSDATE) ]]>
		AND B.PT_NO = #{memberNo}
	</select>
	
	<!-- 환자 대쉬보드 예약관리 페이지 모두보기 페이징_J18 -->
	<select id="ptbmListPage" resultType="BookingVO">
		SELECT *
		FROM ( SELECT /*+INDEX_DESC(BOOKING BOOKING_PK) */
					  ROWNUM RN,
					  B.BOOKING_NO,
	                  B.PT_NO,
	                  B.DOC_NO,
	                  B.BOOKING_DATE,
	                  B.PRICE,
	                  B.CONSULT_DATE,
	                  B.CONSULT_TIME,
	                  B.BOOKING_STATUS,
	                  M.NAME
	           FROM BOOKING B JOIN MEMBER M
			   ON B.DOC_NO = M.MEMBER_NO
			   WHERE <include refid="criteriaPtBook"></include>
					 <![CDATA[
					 ROWNUM <= #{cri.pageNum} * #{cri.amount}
			   AND B.CONSULT_DATE >= TO_DATE(SYSDATE)
			   AND B.PT_NO = #{memberNo}
			   ORDER BY CONSULT_DATE ASC, CONSULT_TIME ASC )
		 WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
	</select>
	
<!-- 환자 대쉬보드 예약관리 페이지 예정된 목록 보기 페이징_J18 -->
	<select id="ptbmListSoonPage" resultType="BookingVO">
		SELECT *
		FROM ( SELECT /*+INDEX_DESC(BOOKING BOOKING_PK) */
					  ROWNUM RN,
					  B.BOOKING_NO,
	                  B.PT_NO,
	                  B.DOC_NO,
	                  B.BOOKING_DATE,
	                  B.PRICE,
	                  B.CONSULT_DATE,
	                  B.CONSULT_TIME,
	                  B.BOOKING_STATUS,
	                  M.NAME
	           FROM BOOKING B JOIN MEMBER M
			   ON B.DOC_NO = M.MEMBER_NO
			   WHERE <include refid="criteriaPtBook"></include>
					 <![CDATA[
					 ROWNUM <= #{cri.pageNum} * #{cri.amount}
			   AND B.CONSULT_DATE >= TO_DATE(SYSDATE)
			   AND B.PT_NO = #{memberNo}
			   AND (B.BOOKING_STATUS = 'p'
          		    OR B.BOOKING_STATUS = 'y')
			   ORDER BY CONSULT_DATE ASC, CONSULT_TIME ASC )
		 WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
	</select>
	
<!-- 환자 대쉬보드 예약관리 페이지 취소된 목록 보기 페이징_J18 -->
	<select id="ptbmListCanceledPage" resultType="BookingVO">
		SELECT *
		FROM ( SELECT /*+INDEX_DESC(BOOKING BOOKING_PK) */
					  ROWNUM RN,
					  B.BOOKING_NO,
	                  B.PT_NO,
	                  B.DOC_NO,
	                  B.BOOKING_DATE,
	                  B.PRICE,
	                  B.CONSULT_DATE,
	                  B.CONSULT_TIME,
	                  B.BOOKING_STATUS,
	                  M.NAME
	           FROM BOOKING B JOIN MEMBER M
			   ON B.DOC_NO = M.MEMBER_NO
			   WHERE <include refid="criteriaPtBook"></include>
					 <![CDATA[
					 ROWNUM <= #{cri.pageNum} * #{cri.amount}
			   AND B.CONSULT_DATE >= TO_DATE(SYSDATE)
			   AND B.PT_NO = #{memberNo}
			   AND B.BOOKING_STATUS = 'c'
			   ORDER BY CONSULT_DATE ASC, CONSULT_TIME ASC )
		 WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
	</select>

	<!-- 환자 대쉬보드 예약관리 페이지_J17 -->
	<select id="ptbmList" resultType="BookingVO">
		SELECT *
		FROM( SELECT /*+INDEX_DESC(BOOKING BOOKING_PK) */
					 ROWNUM RN,
					 B.BOOKING_NO,
					 B.PT_NO,
					 B.DOC_NO,
					 B.BOOKING_DATE,
					 B.PRICE,
					 B.BOOKING_STATUS,
					 B.CONSULT_DATE,
					 B.CONSULT_TIME,
					 M.NAME
			  FROM BOOKING B JOIN MEMBER M
			  ON B.DOC_NO = M.MEMBER_NO
			  WHERE <![CDATA[
			  		B.CONSULT_DATE >= TO_DATE(SYSDATE)
			  AND B.PT_NO = #{memberNo}
			  AND ROWNUM <= #{cri.pageNum} * #{cri.amount} )
		WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
	</select>
<!-- 페이징 end -->

<!-- 환자 대쉬보드 메인 나의 예약 카운트_J17 -->
<select id="ptMyListCount" resultType="int">
	SELECT COUNT(*)
	FROM BOOKING
	WHERE <![CDATA[
		  CONSULT_DATE >= TO_DATE(SYSDATE) ]]>
	AND (BOOKING_STATUS = 'p'
	OR BOOKING_STATUS = 'y')
	AND PT_NO = #{memberNo}
</select>

<!-- 환자 대쉬보드 메인 진료내역수 카운트_J17 -->
<select id="ptMyHistoryCount" resultType="int">
	SELECT COUNT(*)
	FROM BOOKING
	WHERE <![CDATA[
		  CONSULT_DATE < TO_DATE(SYSDATE) ]]>
	AND BOOKING_STATUS = 'p'
	AND PT_NO = #{memberNo}
</select>

<!-- 환자대쉬보드 Main 진료내역 e.5_J18-->
<select id="ptMainhisList" resultType="BookingVO">
	SELECT B.BOOKING_NO,
		   B.PT_NO,
		   B.DOC_NO,
		   B.BOOKING_DATE,
		   B.PRICE,
		   B.BOOKING_STATUS,
		   B.CONSULT_DATE,
		   B.CONSULT_TIME,
		   M.NAME
    FROM BOOKING B JOIN MEMBER M
    ON B.DOC_NO = M.MEMBER_NO
    WHERE <![CDATA[ ROWNUM < 6
    AND CONSULT_DATE < TO_DATE(SYSDATE) ]]>
    AND BOOKING_STATUS = 'p'
    AND PT_NO = #{memberNo}
    ORDER BY CONSULT_DATE DESC
</select>

<!-- 진료내역 페이지, 페이징 e.6-->
<!-- trim 한 것 따로 빼 낸것... -->
	<sql id="criteriasa">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="#{cri.typeArr}" item="type">
				<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
				<trim prefix="or">
					<choose>
						<when test="type == 'T'.toString()">
							TITLE LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="type =='C'.toString()">
							CONTENT LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="type =='W'.toString()">
							WRITER LIKE '%'|| #{cri.keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- total count -->
	<select id="getTotalPthCount" resultType="int">
		SELECT COUNT(*) FROM BOOKING
		WHERE <include refid="criteriasa"></include>
			  BOOKING_STATUS = 'p'
		AND PT_NO = #{memberNo}
		AND BOOKING_NO > 0
		AND <![CDATA[
		  	CONSULT_DATE < TO_DATE(SYSDATE) ]]>
	</select>

	<!-- 환자 대쉬보드 진료내역 최신순 페이징_J19 -->
	<select id="ptHistoryList" resultType="BookingVO">		
		SELECT *
		FROM( SELECT /*+INDEX_DESC(BOOKING BOOKING_PK) */
					 ROWNUM RN,
					 B.BOOKING_NO,
					 B.PT_NO,
					 B.DOC_NO,
					 B.BOOKING_DATE,
					 B.PRICE,
					 B.BOOKING_STATUS,
					 B.CONSULT_DATE,
					 B.CONSULT_TIME,
					 M.NAME,
					 (SELECT COUNT (*)
                      FROM COMMENTS
                      WHERE BOOKING_NO = B.BOOKING_NO) AS COMMENTS
			  FROM BOOKING B JOIN MEMBER M
			  ON B.DOC_NO = M.MEMBER_NO
			  WHERE <include refid="criteriasa"></include>
			  		<![CDATA[
				  	ROWNUM <= #{cri.pageNum} * #{cri.amount}
			  AND B.BOOKING_STATUS = 'p'
			  AND B.PT_NO = #{memberNo}
			  AND CONSULT_DATE < TO_DATE(SYSDATE)
			  ORDER BY CONSULT_DATE DESC, CONSULT_TIME ASC )
		WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
	</select>
	
	<!-- 환자 대쉬보드 진료내역 오래된순 페이징_J19 -->
	<select id="ptHistoryOldestList" resultType="BookingVO">		
		SELECT *
		FROM( SELECT /*+INDEX_DESC(BOOKING BOOKING_PK) */
					 ROWNUM RN,
					 B.BOOKING_NO,
					 B.PT_NO,
					 B.DOC_NO,
					 B.BOOKING_DATE,
					 B.PRICE,
					 B.BOOKING_STATUS,
					 B.CONSULT_DATE,
					 B.CONSULT_TIME,
					 M.NAME,
					 (SELECT COUNT (*)
                      FROM COMMENTS
                      WHERE BOOKING_NO = B.BOOKING_NO) AS COMMENTS
			  FROM BOOKING B JOIN MEMBER M
			  ON B.DOC_NO = M.MEMBER_NO
			  WHERE <include refid="criteriasa"></include>
			  		<![CDATA[
				  	ROWNUM <= #{cri.pageNum} * #{cri.amount}
			  AND	B.BOOKING_STATUS = 'p'
			  AND B.PT_NO = #{memberNo}
			  AND CONSULT_DATE < TO_DATE(SYSDATE)
			  ORDER BY CONSULT_DATE ASC, CONSULT_TIME ASC )
		WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
	</select>
<!-- 페이징 end -->

<!-- 환자대쉬보드 내가 찜한 의사 e.14 -->
<select id = "ptDoctor" resultType="LikesVO">
SELECT 
    MEMBER_NO,
    LIKE_DATE,
    CATEGORY,
    LIKE_MAIN_NO
FROM LIKES 
WHERE MEMBER_NO = #{memberNo} AND CATEGORY='doc'
</select>

<!-- 환자 대쉬보드 Main 나의후기 e.5 _J17 -->
<select id="ptMainreList" resultType="CommentsVO">
	SELECT C.CMAIN_NO,
           C.COMMENT_WRITER_NO,
           C.CONTENTS,
           C.REVIEW_POINT,
           C.REG_DATE,
           C.CMAIN_CATEGORY,
           M.NAME
    FROM COMMENTS C JOIN MEMBER M
    ON (C.CMAIN_NO = M.MEMBER_NO)
    WHERE <![CDATA[
    	  ROWNUM < 6 ]]>
    AND COMMENT_WRITER_NO = #{memberNo}
	ORDER BY REG_DATE DESC
</select>

<!-- 환자 대쉬보드 메인 나의 후기 수 카운트_J17 -->
<select id="ptMyReviewCount" resultType="int">
	SELECT COUNT (CNO)
	FROM COMMENTS
	WHERE COMMENT_WRITER_NO = #{memberNo}
</select>

<!-- 나의후기 페이징 e.6-->
<!-- trim 한 것 따로 빼 낸것... -->
	<sql id="criteriaPtReview">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach collection="#{cri.typeArr}" item="type">
				<!-- 콜렉션에 소문자시작 typeArr 써주면 자동으로 getMathod를 불러주는거임 -->
				<trim prefix="or">
					<choose>
						<when test="type == 'T'.toString()">
							TITLE LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="type =='C'.toString()">
							CONTENT LIKE '%'|| #{cri.keyword} || '%'
						</when>

						<when test="type =='W'.toString()">
							WRITER LIKE '%'|| #{cri.keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- total count -->
	<!-- 환자 대쉬보드 나의 후기 페이징 카운트_J18 -->
	<select id="getTotalPtrvCount" resultType="int">
		SELECT COUNT(*) FROM COMMENTS
		WHERE
		<include refid="criteriaPtReview"></include>
		COMMENT_WRITER_NO = #{memberNo}
	</select>

	<!-- 환자 대쉬보드 나의 후기 페이지 최신순 페이징_J18 -->
	<select id="ptReviewList" resultType="CommentsVO">
		SELECT *
		FROM( SELECT /*+INDEX_DESC(COMMENTS COMMENTS_PK) */
					 ROWNUM RN,
					 C.CMAIN_CATEGORY,
					 C.CMAIN_NO,
					 C.COMMENT_WRITER_NO,
					 C.CONTENTS,
					 C.REVIEW_POINT,
					 C.REG_DATE,
					 C.CNO,
					 M.NAME
			  FROM COMMENTS C JOIN MEMBER M
		 	  ON (C.CMAIN_NO = M.MEMBER_NO)
         	  WHERE <include refid="criteriaPtReview"></include>
         	  		<![CDATA[
         	  		ROWNUM <= #{cri.pageNum} * #{cri.amount}
         	  AND C.COMMENT_WRITER_NO = #{memberNo} 
         	  ORDER BY C.REG_DATE DESC )
		WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
	</select>
	<!-- 페이징 end -->
	
	<!-- 환자 대쉬보드 나의 후기 페이지 오래된순 페이징_J18 -->
	<select id="ptReviewOldestList" resultType="CommentsVO">
		SELECT *
		FROM( SELECT /*+INDEX_DESC(COMMENTS COMMENTS_PK) */
					 ROWNUM RN,
					 C.CMAIN_CATEGORY,
					 C.CMAIN_NO,
					 C.COMMENT_WRITER_NO,
					 C.CONTENTS,
					 C.REVIEW_POINT,
					 C.REG_DATE,
					 C.CNO,
					 M.NAME
			  FROM COMMENTS C JOIN MEMBER M
		 	  ON (C.CMAIN_NO = M.MEMBER_NO)
         	  WHERE <include refid="criteriaPtReview"></include>
         	  		<![CDATA[
         	  		ROWNUM <= #{cri.pageNum} * #{cri.amount}
         	  AND C.COMMENT_WRITER_NO = #{memberNo} 
         	  ORDER BY C.REG_DATE ASC )
		WHERE RN > (#{cri.pageNum}-1)* #{cri.amount} ]]>
	</select>
	<!-- 페이징 end -->

		<!-- 환자 대쉬보드 프로필 관리 e.12-->
		<select id="ptSelectOne" resultType="MemberVO">
			SELECT 
					NAME,
					MEMBER_ID,
					EMAIL,
					PHONE,
					GENDER,
					IDENTIFY_NO
			FROM MEMBER
			WHERE MEMBER_NO = #{memberNo}
		</select>
		
		<!-- 환자 대쉬보드 프로필 수정 e.12 -->
		<update id="ptprofileUpdate">
			UPDATE MEMBER SET
					EMAIL = #{email},
					PHONE = #{phone},
					PT_PROFILE_PHOTO = #{ptProfilePhoto}
			WHERE MEMBER_NO = #{memberNo}
		</update>
		
		<!-- K.10/10 약배달 정보확인 -->
		<select id="ptDeliveryCheck" resultType="patientsVO">
			SELECT  
					MEMBER_NO,
					DEL_ADDR,
					DEL_ADDR2,
					DEL_ADDR3,
					DEL_POST_CODE,
					DEL_NOTE,
					DEL_PHARMACY_NO
			FROM PATIENTS
			WHERE MEMBER_NO = #{memberNo}
		</select>
		
		<!-- K.10/10 약배달 신청 정보 등록 -->
		<insert id="ptDeliveryInsert">
			insert into patients (
					MEMBER_NO,
                    DEL_ADDR,
					DEL_ADDR2,
					DEL_ADDR3,
					DEL_POST_CODE,
					DEL_NOTE,
					DEL_PHARMACY_NO
			)values (
					#{memberNo},
					#{delAddr, jdbcType=VARCHAR},
					#{delAddr2, jdbcType=VARCHAR},
					#{delAddr3, jdbcType=VARCHAR},
					#{delPostCode,jdbcType=VARCHAR},
					#{delNote, jdbcType=VARCHAR},
					#{delPharmacyNo}
			)
		</insert>
		
		<!-- K.10/10 약배달 정보 수정 -->
		<update id="ptDeliveryUpdate">
			UPDATE PATIENTS SET 
					DEL_ADDR = #{delAddr, jdbcType=VARCHAR},
					DEL_ADDR2 = #{delAddr2, jdbcType=VARCHAR},
					DEL_ADDR3 = #{delAddr3},
					DEL_POST_CODE = #{delPostCode, jdbcType=VARCHAR},
					DEL_NOTE = #{delNote, jdbcType=VARCHAR},
					DEL_PHARMACY_NO = #{delPharmacyNo}
			WHERE MEMBER_NO = #{memberNo}
		</update>
 	
 	<!-- K. 10/17 환자 메인 약배달 현황 목록 -->
 	<select id="ptDeliveryStatusList" resultType="PtDeliveryVO">
 		SELECT B.BOOKING_NO , B.CONSULT_DATE, B.SUBJECT,
                                        (SELECT DISTINCT MM.NAME 
                                         FROM MEMBER MM , BOOKING BB 
                                         WHERE MM.MEMBER_NO = BB.DOC_NO
                                         AND MM.MEMBER_NO = B.DOC_NO) "DOC_NAME", 
                                        (SELECT DISTINCT PH.PHARMACY_INFO 
                                        FROM PARTNER_PHARMACY PH , MED_DELIVERY MDD 
                                        WHERE PH.MEMBER_NO = MDD.PHARMACY_NO
                                        AND PH.MEMBER_NO = MD.PHARMACY_NO) "PHARMACY_NAME",
		MD.DELIVERY_STATUS, MD.DELIVERY_DECLINE
		FROM BOOKING B, MED_DELIVERY MD
		WHERE B.BOOKING_NO = MD.BOOKING_NO
		AND B.PT_NO = #{memberNo}
		<![CDATA[ and ROWNUM < 6
        ORDER BY B.CONSULT_DATE DESC ]]>
 	</select>
 	
 	<!-- K. 10/18 환자 약배달 현황 전체조회 -->
 	<select id="ptDeliveryStatusAllList" resultType="PtDeliveryVO">
 		SELECT B.BOOKING_NO , B.CONSULT_DATE, B.SUBJECT,
                                        (SELECT DISTINCT MM.NAME 
                                         FROM MEMBER MM , BOOKING BB 
                                         WHERE MM.MEMBER_NO = BB.DOC_NO
                                         AND MM.MEMBER_NO = B.DOC_NO) "DOC_NAME", 
                                        (SELECT DISTINCT PH.PHARMACY_INFO 
                                        FROM PARTNER_PHARMACY PH , MED_DELIVERY MDD 
                                        WHERE PH.MEMBER_NO = MDD.PHARMACY_NO
                                        AND PH.MEMBER_NO = MD.PHARMACY_NO) "PHARMACY_NAME",
		MD.DELIVERY_STATUS, MD.DELIVERY_DECLINE
		FROM BOOKING B, MED_DELIVERY MD
		WHERE B.BOOKING_NO = MD.BOOKING_NO
		AND B.PT_NO = #{memberNo}
		ORDER BY B.CONSULT_DATE DESC
 	</select>
 	
 	<!-- K.10/19 약배달 신청 약국 변경 -->
 	<update id="delPhaUpdate">
 		update patients
		set del_pharmacy_no = #{delPharmacyNo} 
		where member_no = #{memberNo}
 	</update>
</mapper>